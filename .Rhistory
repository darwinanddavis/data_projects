)
# plot
map
provider_type <- names(providers)[37]
provider_type2 <- "CartoDB.Positron"# "Stamen.Toner" # set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 8 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
### default maps
map <- leaflet() %>%
setView(latlon[2,2],latlon[2,1], zoom = 8)
map <- addTiles(map) # add the actual map tiles to the leaflet object
map <- addCircles(map,sample(35,20,replace=T),sample(35,20,replace=T)) # generate some random data around lat/lon 35
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
map <- addCircles(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = weight,
opacity = opac,
color = col_site,
fillColor = col_site,
label=site_names,
popup=site_names,
data=latlon)
map <- addProviderTiles(map, provider_type,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
provider_type <- names(providers)[37]
provider_type2 <- "CartoDB.Positron"# "Stamen.Toner" # set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 2 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
### default maps
map <- leaflet() %>%
setView(latlon[2,2],latlon[2,1], zoom = zoom)
map <- addTiles(map) # add the actual map tiles to the leaflet object
map <- addCircles(map,sample(35,20,replace=T),sample(35,20,replace=T)) # generate some random data around lat/lon 35
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
map <- addCircles(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = weight,
opacity = opac,
color = col_site,
fillColor = col_site,
label=site_names,
popup=site_names,
data=latlon)
map <- addProviderTiles(map, provider_type,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
zoom <- 5 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
### default maps
map <- leaflet() %>%
setView(latlon[2,2],latlon[2,1], zoom = zoom)
map <- addTiles(map) # add the actual map tiles to the leaflet object
map <- addCircles(map,sample(35,20,replace=T),sample(35,20,replace=T)) # generate some random data around lat/lon 35
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
map <- addCircles(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = weight,
opacity = opac,
color = col_site,
fillColor = col_site,
label=site_names,
popup=site_names,
data=latlon)
map <- addProviderTiles(map, provider_type,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
require(leaflet); require(dplyr)
provider_type <- "CartoDB.Positron"#  "Stamen.Toner"
opac <- 1 #
projlatlon <- c(38.627003, -90.199402)
map <- leaflet() %>%
setView(projlatlon[2],projlatlon[1], zoom = 10)
map <- addTiles(map)
map <- addMarkers(map,projlatlon[2],projlatlon[1])
map <- addProviderTiles(map, provider_type,options = providerTileOptions(opacity = opac))
map
# load data
site_names <- c("Kisumu","Lake Jipe","Kinango")
kisumu <- c(-0.0917,34.7680)
lake_jipe <- c(-3.6019,37.7557)
kinango <- c(-4.1393,39.3180)
latlon <- t(data.frame(kisumu,lake_jipe,kinango))
colnames(latlon) <- c("lat", "lng") # need to be named this
latlon
### default maps
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
map <- addCircles(map,sample(35,20,replace=T),sample(35,20,replace=T)) # generate some random data around lat/lon 35
map
### custom map
# add custom base layers
latlon
############################ creating maps ############################
# gallery of map styles
# https://leaflet-extras.github.io/leaflet-providers/preview/
### default maps
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
provider_type <- "Stamen.Toner"
provider_type2 <- "CartoDB.Positron"# "Stamen.Toner" # set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 5 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
map <- leaflet() # initiate the leaflet map object
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
map <- addCircles(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = weight,
opacity = opac,
color = col_site,
fillColor = col_site,
label=site_names,
popup=site_names,
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
provider_type <- "Stamen.Toner"
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
names(providers) # types of base maps available
# some good custom layers
# 37-48, 97-103,
# provider_type <- names(providers)[37]
provider_type <- "Stamen.Toner"
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
map <- addCircles(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = weight,
opacity = opac,
color = col_site,
fillColor = col_site,
label=site_names,
popup=site_names,
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = weight,
opacity = opac,
color = col_site,
fillColor = col_site,
label=site_names,
popup=site_names,
data=latlon)
?addCircles
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
require(leaflet);require(dplyr)
# load data
site_names <- c("Kisumu","Lake Jipe","Kinango")
kisumu <- c(-0.0917,34.7680)
lake_jipe <- c(-3.6019,37.7557)
kinango <- c(-4.1393,39.3180)
latlon <- t(data.frame(kisumu,lake_jipe,kinango))
colnames(latlon) <- c("lat", "lng") # need to be named this
latlon
############################ creating maps ############################
# gallery of map styles
# https://leaflet-extras.github.io/leaflet-providers/preview/
### default maps
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
names(providers) # types of base maps available
# some good custom layers
# 37-48, 97-103,
# provider_type <- names(providers)[37]
provider_type <- "Stamen.Toner"
provider_type2 <- "CartoDB.Positron"# "Stamen.Toner" # set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
# map <- addCircles(map,
#                   lng = latlon[,"lng"],
#                   lat = latlon[,"lat"],
#                   radius = radius,
#                   stroke = TRUE,
#                   weight = weight,
#                   opacity = opac,
#                   color = col_site,
#                   fillColor = col_site,
#                   label=site_names,
#                   popup=site_names,
#                   data=latlon)
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
pacman::p_load(leaflet,dplyr)
latlon <- t(data.frame(kisumu,lake_jipe,kinango))
colnames(latlon) <- c("lat", "lng") # need to be named this
latlon
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
provider_type <- "Thunderforest.MobileAtlas"
provider_type2 <- "Thunderforest.MobileAtlas"
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
# find good zoom level
bl <- NULL # bottom left
tl <- NULL # top left
tr <- NULL # top right
br <- NULL # bottom right
map_aerial <- fitBounds(map, bl, tl, tr, br)
# add the site locations
# map <- addCircles(map,
#                   lng = latlon[,"lng"],
#                   lat = latlon[,"lat"],
#                   radius = radius,
#                   stroke = TRUE,
#                   weight = weight,
#                   opacity = opac,
#                   color = col_site,
#                   fillColor = col_site,
#                   label=site_names,
#                   popup=site_names,
#                   data=latlon)
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
provider_type2 <- "Thunderforest.MobileAtlas"
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
map
provider_type2 <- "Thunderforest.MobileAtlas"
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
# find good zoom level
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
names(providers) # types of base maps available
# some good custom layers
# 37-48, 97-103,
# provider_type <- names(providers)[37]
provider_type <- "Stamen.Toner"
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
fill_polygon <- TRUE # FALSE = just draw lines among points
# add the site locations
# map <- addCircles(map,
#                   lng = latlon[,"lng"],
#                   lat = latlon[,"lat"],
#                   radius = radius,
#                   stroke = TRUE,
#                   weight = weight,
#                   opacity = opac,
#                   color = col_site,
#                   fillColor = col_site,
#                   label=site_names,
#                   popup=site_names,
#                   data=latlon)
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
# load data. can also be generated from google api.
site_names <- c("Kisumu","Lake Jipe","Kinango")
kisumu <- c(-0.0917,34.7680)
lake_jipe <- c(-3.6019,37.7557)
kinango <- c(-4.1393,39.3180)
latlon <- t(data.frame(kisumu,lake_jipe,kinango))
colnames(latlon) <- c("lat", "lng") # need to be named this
latlon
# build map ---------------------------------------------------------------
### default maps
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
names(providers) # types of base maps available
# some good custom layers
# 37-48, 97-103,
# provider_type <- names(providers)[37]
provider_type <- "CartoDB.Positron"# set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type2,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
# load data. can also be generated from google api.
site_names <- c("Kisumu","Lake Jipe","Kinango")
kisumu <- c(-0.0917,34.7680)
lake_jipe <- c(-3.6019,37.7557)
kinango <- c(-4.1393,39.3180)
latlon <- t(data.frame(kisumu,lake_jipe,kinango))
colnames(latlon) <- c("lat", "lng") # need to be named this
latlon
# build map ---------------------------------------------------------------
### default maps
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
names(providers) # types of base maps available
# some good custom layers
# 37-48, 97-103,
# provider_type <- names(providers)[37]
provider_type <- "CartoDB.Positron"# set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type1,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
# load data. can also be generated from google api.
site_names <- c("Kisumu","Lake Jipe","Kinango")
kisumu <- c(-0.0917,34.7680)
lake_jipe <- c(-3.6019,37.7557)
kinango <- c(-4.1393,39.3180)
latlon <- t(data.frame(kisumu,lake_jipe,kinango))
colnames(latlon) <- c("lat", "lng") # need to be named this
latlon
# build map ---------------------------------------------------------------
### default maps
require(leaflet)
map <- leaflet() # initiate the leaflet map object
map <- addTiles(map) # add the actual map tiles to the leaflet object
names(providers) # types of base maps available
# some good custom layers
# 37-48, 97-103,
# provider_type <- names(providers)[37]
provider_type <- "CartoDB.Positron"# set the above input as the custom base
col_site <- "red" # colour of site marker
radius <- 10 # size of site marker
zoom <- 6 # zoom level
opac <- 1 # transparency of map elements
weight <- 2 # width of poly lines
map <- addMarkers(map,
lng = latlon[,"lng"],
lat = latlon[,"lat"],
data=latlon)
# add custom map bases
map <- addProviderTiles(map, provider_type,
options = providerTileOptions(opacity = opac) # add opacity to country lines
)
# plot
map
